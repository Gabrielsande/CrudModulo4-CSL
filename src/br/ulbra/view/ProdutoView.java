package br.ulbra.view;


import br.ulbra.DAO.FornecedorDAO;
import br.ulbra.DAO.ProdutoDAO;
import br.ulbra.model.Fornecedor;
import br.ulbra.model.Produto;
import java.sql.SQLException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ProdutoView extends javax.swing.JFrame {

    private Produto produtoEmEdicao;

    /**
     * Creates new form ProdutoView
     */
    public ProdutoView() {
        initComponents();
        listarProdutos();
        carregarFornecedores();
        
        if (produtoEmEdicao != null && produtoEmEdicao.getFornecedor() != null) {
            selecionarFornecedorNoCombo(produtoEmEdicao.getFornecedor());
        }
    }

    private void carregarFornecedores() {
        try {
            FornecedorDAO dao = new FornecedorDAO();
            List<Fornecedor> fornecedores = dao.listar();

            DefaultComboBoxModel<Fornecedor> model = new DefaultComboBoxModel<>(
                    fornecedores.toArray(new Fornecedor[0])
            );

            CbFornecedor.setModel(model);
            CbFornecedor.setSelectedIndex(-1);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao carregar fornecedores: " + ex.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void selecionarFornecedorNoCombo(Fornecedor fSelecionado) {
        if (fSelecionado == null) {
            CbFornecedor.setSelectedIndex(-1);
            return;
        }
        int index = -1;
        for (int i = 0; i < CbFornecedor.getItemCount(); i++) {
            Object item = CbFornecedor.getItemAt(i);
            if (item instanceof Fornecedor) {
                Fornecedor fornecedorNoCombo = (Fornecedor) item;
                if (fornecedorNoCombo.getIdFor() == fSelecionado.getIdFor()) {
                    index = i;
                    break;
                }
            }
        }
        CbFornecedor.setSelectedIndex(index);
    }

    private void listarProdutos() {
        try {
            ProdutoDAO dao = new ProdutoDAO();
            List<Produto> lista = dao.listar();
            DefaultTableModel model = (DefaultTableModel) tblProd.getModel();
            model.setRowCount(0);
            for (Produto p : lista) {
                String fornecedorNome = (p.getFornecedor() != null) ? p.getFornecedor().getNomeRazao() : "";
                model.addRow(new Object[]{
                    p.getId(),
                    p.getNome(),
                    fornecedorNome,
                    p.getPreco()
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao listar produtos: " + ex.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limparCamposProduto() {
        txtNomeProd.setText("");
        txtPrecoProd.setText("");
        CbFornecedor.setSelectedIndex(-1);
    }
 public void setBotoes(int op) {
        switch (op) {
            case 1:
                btnSalvar.setEnabled(false);
                btnEditar.setEnabled(true);
                btnExcluir.setEnabled(true);
                break;
            default:
                btnSalvar.setEnabled(true);
                btnEditar.setEnabled(false);
                btnExcluir.setEnabled(false);

        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIdProd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNomeProd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CbFornecedor = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtPrecoProd = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProd = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID");

        jLabel2.setText("Nome Produto");

        jLabel3.setText("Fornecedor");

        CbFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbFornecedorActionPerformed(evt);
            }
        });

        jLabel5.setText("Preço");

        tblProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome Produto", "Fornecedor", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProd);

        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnListar.setText("LISTAR");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 3, 24)); // NOI18N
        jLabel4.setText("PRODUTOS");

        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtPrecoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(txtIdProd)
                                .addComponent(txtNomeProd)
                                .addComponent(CbFornecedor, 0, 236, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(btnSalvar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditar)
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluir)
                                .addGap(18, 18, 18)
                                .addComponent(btnListar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel6)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel4)))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIdProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrecoProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addComponent(btnListar))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CbFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbFornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbFornecedorActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // 1) Ler valores da tela
        String nome = txtNomeProd.getText().trim();
        String precoStr = txtPrecoProd.getText().trim();
        Object selectedFornecedor = CbFornecedor.getSelectedItem();

        // 2) Validações básicas (nome, preço, fornecedor etc.)
        if (nome.isEmpty()) {
            /* ... */ return;
        }
        double preco;
        try {
            preco = Double.parseDouble(precoStr);
        } catch (NumberFormatException ex) {
            // ...
            return;
        }

        // 3) Passo 4: obter fornecedor selecionado
        Fornecedor fornecedor = null;
        if (selectedFornecedor instanceof Fornecedor) {
            fornecedor = (Fornecedor) selectedFornecedor;
        }
        if (fornecedor == null) {
            JOptionPane.showMessageDialog(this, "Selecione um fornecedor.");
            return;
        }

        // 4) Montar o produto com o fornecedor obtido (Passo 4)
        Produto p = new Produto();
        p.setNome(nome);
        p.setPreco(preco);
        p.setFornecedor(fornecedor);

        // 5) Persistir via DAO
        try {
            ProdutoDAO dao = new ProdutoDAO();
            dao.salvar(p);
            // Atualizar UI
            listarProdutos();
        } catch (Exception ex) {
            // tratamento de erro
        }
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        listarProdutos();
        setBotoes(0);
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
       try {
    // Se ainda não estivermos em modo edição, iniciar edição
    if (produtoEmEdicao == null) {
        int linha = tblProd.getSelectedRow();
        if (linha < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecione um produto para editar");
            return;
        }

        Integer id = (Integer) tblProd.getValueAt(linha, 0); // supondo que a coluna 0 é o ID

        ProdutoDAO dao = new ProdutoDAO();
        Produto p = dao.buscarPorId(id);
        if (p == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Produto não encontrado");
            return;
        }

        // Preenche os campos de edição com os valores atuais
        txtIdProd.setText(String.valueOf(p.getId())); // se você tiver um TxtId
        txtNomeProd.setText(p.getNome());
        txtPrecoProd.setText(String.valueOf(p.getPreco()));

        Fornecedor f = p.getFornecedor();
        if (f != null) {
            int idx = -1;
            for (int i = 0; i < CbFornecedor.getItemCount(); i++) {
                Object item = CbFornecedor.getItemAt(i);
                if (item instanceof Fornecedor) {
                    Fornecedor ff = (Fornecedor) item;
                    if (ff.getIdFor() == f.getIdFor()) {
                        idx = i;
                        break;
                    }
                }
            }
            if (idx >= 0) CbFornecedor.setSelectedIndex(idx);
        } else {
            CbFornecedor.setSelectedIndex(-1);
        }

        // Marca o produto atual como em edição
        produtoEmEdicao = p;

        // Habilita campos para edição (se necessário) e atualiza UI
        txtNomeProd.setEnabled(true);
        txtPrecoProd.setEnabled(true);
        CbFornecedor.setEnabled(true);

        // Opcional: mudar o texto do botão para "Salvar" ou manter toggle
        // btnEditar.setText("Salvar alterações");
        // Se tiver um botão de salvar específico, habilite-o
        // btnSalvarEdicao.setEnabled(true);

        // Foco para o primeiro campo
        txtNomeProd.requestFocusInWindow();

        return; // sai do método aqui, agora o usuário edita e, na próxima ação, salva
    }

    // Se já estivermos em modo edição, salvamos as alterações (fluxo toggle)
    // 6) Coleta valores dos campos
    String novoNome = txtNomeProd.getText().trim();
    String precoStr = txtPrecoProd.getText().trim();
    double novoPreco;
    try {
        novoPreco = Double.parseDouble(precoStr);
    } catch (NumberFormatException nfe) {
        javax.swing.JOptionPane.showMessageDialog(this, "Preço inválido");
        return;
    }

    Fornecedor novoFornecedor = null;
    Object sel = CbFornecedor.getSelectedItem();
    if (sel instanceof Fornecedor) {
        novoFornecedor = (Fornecedor) sel;
    }

    // Atualiza o objeto em memória
    produtoEmEdicao.setNome(novoNome);
    produtoEmEdicao.setPreco(novoPreco);
    produtoEmEdicao.setFornecedor(novoFornecedor);

    // Persistência
    ProdutoDAO dao = new ProdutoDAO();
    dao.atualizar(produtoEmEdicao);

    javax.swing.JOptionPane.showMessageDialog(this, "Produto atualizado com sucesso");

    // Atualiza a tabela refletindo a edição
    listarProdutos();

    // Limpa o estado e esquemas de edição
    produtoEmEdicao = null;
    limparCamposProduto(); // ou resetarCamposEdicao(), conforme seu código
    // Opcional: resetar a UI
    // TxtNomePro.setText("");
    // TxtPreco.setText("");
    // CbFornecedor.setSelectedIndex(-1);

} catch (NumberFormatException nfe) {
    javax.swing.JOptionPane.showMessageDialog(this, "Selecione um produto para editar");
} catch (Exception ex) {
    javax.swing.JOptionPane.showMessageDialog(this, "Erro ao atualizar: " + ex.getMessage());

        }  
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linha = tblProd.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um produto para excluir.");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
                "Deseja realmente excluir o produto selecionado?",
                "Confirmar",
                JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        Integer id = (Integer) tblProd.getValueAt(linha, 0);
        try {
            ProdutoDAO dao = new ProdutoDAO();
            dao.remover(id);
            JOptionPane.showMessageDialog(this, "Produto excluído com sucesso.");
            listarProdutos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir produto: " + ex.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProdutoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProdutoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProdutoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProdutoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProdutoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Fornecedor> CbFornecedor;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProd;
    private javax.swing.JTextField txtIdProd;
    private javax.swing.JTextField txtNomeProd;
    private javax.swing.JTextField txtPrecoProd;
    // End of variables declaration//GEN-END:variables
}
